HW 2.1

1) isEmpty(Dynamic set s) : returns boolean. True if empty. False otherwise.
2) isSubset(Dynamic set s1, Dynamic set s2) : returns boolean. True if s1 is subet of s2. False otherwise

==================================================================

HW 2.2 

We have to give a maximum size to the stack when using array implementation.
Can't store more elements beyond that max size.
Not dynamic.


==================================================================

HW 2.3

Input: An array p of n numbers containing stock prices
Output: An array s of n numbers containing span for each day

Pseudo:

s <- array of length n initialized with 0

s[0] <- 1
for i <- 1 to n-1 do
    temp <- 1
    j <- i-1
    while (j>=0 and p[j]<= p[i])
        do temp <- temp +1
           j <- j-1
    s[i] <- temp
return s

Time complexity: 
O(n^2) (explain this)

===================================================================

HW 2.4

Input: An array p of n numbers containing stock prices
Output: An array s of n numbers containing span for each day

Pseudo:

s <- array of length n initialized with 0
st <- empty stack represented as an array

s[0] <- 1
st.push(0)
for i <- 1  to n-1 do
    while((not st.isEmpty()) and p[i]>=p[st.top()])
        do st.pop()
    if st.isEmpty() then 
        s[i] <- i + 1
    else
        s[i] <- i - st.top()
    st.push(i)
return s


==================================================================

HW 2.5

p = [1,3,5,7,9]
Any array in strictly increasing order.
x`